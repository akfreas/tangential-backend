service: tangential
frameworkVersion: "3"

plugins:
  - serverless-offline
  - serverless-plugin-typescript
  - serverless-dotenv-plugin
  - serverless-domain-manager
  - "@akfreas/serverless-offline-sqs"
useDotenv: true

provider:
  name: aws
  runtime: nodejs18.x
  timeout: 60
  stage: ${opt:stage, 'offline'}
  region: us-east-1
  iam:
    role:
      statements: ${file(./iam-role.yml)}

  environment:
    projectAnalysisQueueUrl: ${self:custom.projectAnalysisQueueUrl.${self:provider.stage}, self:custom.projectAnalysisQueueUrl.remote}
  httpApi:
    cors:
      allowedOrigins:
        - "https://${self:provider.stage}.tangential.app"
      allowedHeaders:
        - "Content-Type"
        - "X-Atlassian-Token"
        - "X-Atlassian-Id"
      allowCredentials: false

custom:
  projectAnalysisQueueUrl:
    offline: ${self:custom.serverless-offline-sqs.endpoint}/queue/ProjectAnalysisQueue-${self:provider.stage}
    remote:
      Ref: ProjectAnalysisQueue

  serverless-offline-sqs:
    endpoint: http://localhost:4566
    region: us-east-1
    debug: true

  customDomain:
    domainName: ${self:provider.stage}.api.tangential.app
    stage: $default
    certificateArn: arn:aws:acm:us-east-1:556167323904:certificate/ba19fbb2-0c34-4cd6-984a-0c5562fd6e9d
    endpointType: regional
    hostedZoneId: Z091731134YSQCRRMM86I
    autoDomain: true
    apiType: http

functions:
  startWorkspaceAnalysis:
    handler: src/functions/startWorkspaceAnalysis.handler
    events:
      - httpApi:
          method: get
          path: /workspace/analyze

  analyzeProjectFromQueue:
    handler: src/functions/analyzeProjectFromQueue.handler
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - ProjectAnalysisQueue
              - Arn
          batchSize: 5

resources:
  Resources:
    ProjectAnalysisQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ProjectAnalysisQueue-${self:provider.stage}
        RedrivePolicy:
          deadLetterTargetArn: !GetAtt ProjectAnalysisDeadLetterQueue.Arn
          maxReceiveCount: 2
        VisibilityTimeout: ${self:provider.timeout}

    ProjectAnalysisDeadLetterQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ProjectAnalysisDeadLetterQueue-${self:provider.stage}
